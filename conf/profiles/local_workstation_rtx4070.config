/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Local workstation RTX 4070 profile (22 cores, 64GB RAM, RTX 4070 GPU)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/

params {
    config_profile_name        = 'Local workstation RTX 4070'
    config_profile_description = 'Local workstation profile for 22 cores, 64GB RAM, and NVIDIA RTX 4070 GPU'
    
    // Maximum resource limits (leaving overhead: 20 cores, 56GB RAM)
    max_cpus   = 20
    max_memory = '56.GB'
    max_time   = '240.h'
}

process {
    // Standard defaults optimized for local workstation with RTX 4070
    cpus              = { check_max( 2    * task.attempt, 'cpus'     ) }
    memory            = { check_max( 4.GB * task.attempt, 'memory'   ) }
    time              = { check_max( 4.h  * task.attempt, 'time'     ) }

    errorStrategy     = { task.exitStatus in [71,104,134,137,139,140,143,255] ? 'retry' : 'finish' }
    maxRetries        = 2
    maxErrors         = '-1'

    // Process-specific resource requirements optimized for clustering workflow
    withLabel:process_single {
        cpus          = { check_max( 1                  , 'cpus'     ) }
        memory        = { check_max( 2.GB * task.attempt, 'memory'   ) }
        time          = { check_max( 2.h  * task.attempt, 'time'     ) }
    }
    withLabel:process_low {
        cpus          = { check_max( 2     * task.attempt, 'cpus'    ) }
        memory        = { check_max( 4.GB * task.attempt, 'memory'  ) }
        time          = { check_max( 4.h   * task.attempt, 'time'    ) }
        maxForks      = 8   // Allow multiple low processes
    }
    withLabel:process_medium {
        cpus          = { check_max( 4     * task.attempt, 'cpus'    ) }
        memory        = { check_max( 8.GB * task.attempt, 'memory'  ) }
        time          = { check_max( 8.h   * task.attempt, 'time'    ) }
        maxForks      = 4   // Allow multiple medium processes
    }
    withLabel:process_high {
        cpus          = { check_max( 8    * task.attempt, 'cpus'    ) }
        memory        = { check_max( 16.GB * task.attempt, 'memory'  ) }
        time          = { check_max( 24.h   * task.attempt, 'time'   ) }
        maxForks      = 2   // Limit high-resource processes
    }
    withLabel:process_long {
        time          = { check_max( 96.h  * task.attempt, 'time'    ) }
    }
    withLabel:process_high_memory {
        memory        = { check_max( 24.GB * task.attempt, 'memory' ) }
        maxForks      = 2   // Limit memory-intensive processes
    }

    // Specific optimizations for clustering workflow on RTX 4070 workstation
    withName:MASH_SKETCH {
        cpus   = 2
        memory = '2.GB'
        time   = '1.h'
    }
    withName:MASH_DIST {
        cpus   = 4
        memory = '8.GB'
        time   = '2.h'
    }
    withName:CLUSTER_GENOMES {
        cpus   = 2
        memory = '4.GB'
        time   = '1.h'
    }
    withName:SKA_BUILD {
        cpus   = 4
        memory = '8.GB'
        time   = '2.h'
    }
    withName:SKA_ALIGN {
        cpus   = 4
        memory = '8.GB'
        time   = '2.h'
    }
    withName:IQTREE_FAST {
        cpus   = 8
        memory = '16.GB'
        time   = '4.h'
    }
    withName:GUBBINS_CLUSTER_DIAGNOSTIC {
        cpus     = 8
        memory   = '20.GB'
        time     = '12.h'
        maxForks = 1  // Only one Gubbins process at a time
    }
    withName:USHER_BUILD {
        cpus   = 6
        memory = '12.GB'
        time   = '4.h'
    }
    withName:USHER_PLACE {
        cpus   = 4
        memory = '8.GB'
        time   = '2.h'
    }
    
    // GPU-accelerated processes (if available in future)
    withName:GPU_ACCELERATED {
        accelerator = [request: 1, type: 'nvidia-rtx-4070']
        cpus        = 4
        memory      = '16.GB'
        time        = '2.h'
    }
}

executor {
    name = 'local'
    cpus = 20
    memory = '56.GB'
}